{"version":3,"sources":["component/Roll.js","views/Home/index.js","router/indexRouter.js","App.js","serviceWorker.js","index.js"],"names":["Roll","state","list","axios","get","then","res","setState","data","swipers","Swiper","direction","slidesPerView","loop","autoplay","el","onmouseover","stop","onmouseleave","start","this","className","map","item","i","key","name","location","time","Component","Home","mytext","src","alt","to","value","onChange","e","target","type","maxLength","placeholder","path","component","exact","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8173b291.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swiper from \"swiper\";\r\nimport \"./Roll.css\";\r\nclass Roll extends Component{\r\n    state = {\r\n        list:[]\r\n    }\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8000/Roll\").then(res => {\r\n            this.setState({\r\n                list:res.data\r\n            })\r\n        })\r\n    }\r\n    componentDidUpdate() {\r\n        var swipers=new Swiper(\".Roll-center\", {\r\n            direction: \"vertical\",\r\n            slidesPerView: 4,\r\n            loop: true,\r\n            autoplay: true,   \r\n        });\r\n        swipers.el.onmouseover = function () {\r\n            swipers.autoplay.stop()\r\n        }\r\n        swipers.el.onmouseleave = function () {\r\n            swipers.autoplay.start()\r\n        }\r\n    }\r\n    render() {\r\n        let {list}=this.state\r\n        return (\r\n        <div className=\"swiper-container Roll-center\">\r\n            <div className=\"swiper-wrapper Roll\">\r\n            {list.map((item, i) => (\r\n            <div key={i} className=\"swiper-slide\">\r\n                <div className=\"Roll-name\">{item.name}</div>\r\n                <div className=\"Roll-location\">{item.location}</div>\r\n                <div className=\"Roll-time\">{item.time}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n        )\r\n    }\r\n}\r\nexport default Roll\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Roll from \"../../component/Roll\";\r\nimport \"./Home.css\"\r\nclass Home extends Component{\r\n    state= {\r\n        mytext:\"\"\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"header\">\r\n                    <div className=\"header-center\">\r\n                        <div className=\"ico\">\r\n                            <img src=\"https://img.alicdn.com/tfs/TB1Zv8_lxSYBuNjSspjXXX73VXa-390-63.png\" alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"line\"></div>\r\n                        <div className=\"index\">社招官网</div>\r\n                        <ul className=\"ul-one\">\r\n                            \r\n                            <li>\r\n                                <NavLink to=\"/home\">首页</NavLink> \r\n                            </li>\r\n                            <li>\r\n                                <NavLink to=\"/socity\">社会招聘</NavLink>  \r\n                            </li>\r\n                            <li>\r\n                                <NavLink to=\"/school\">校园招聘</NavLink>  \r\n                            </li>\r\n                            <li>\r\n                                <NavLink to=\"/know\">了解阿里</NavLink>  \r\n                            </li>\r\n                            <li>\r\n                                <NavLink to=\"/name\">个人中心</NavLink>  \r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"login\">\r\n                            欢迎来到阿里巴巴集团招聘！\r\n                            <NavLink to=\"/login\">登录</NavLink>\r\n                            <div className=\"line-one\"></div>\r\n                            <NavLink to=\"/login\">注册</NavLink> \r\n                        </div>\r\n                    </div>\r\n                </div> \r\n                <div className=\"center\">\r\n                    <img src=\"https://img.alicdn.com/tfs/TB14TEEm7CWBuNjy0FaXXXUlXXa-1440-478.png\" alt=\"\"/>\r\n                    <div className=\"center-position\">\r\n                        <div className=\"center-top\">\r\n                            <p>If not now, when?</p>\r\n                            <p>If not me, who?</p> \r\n                            <p className=\"center-text\">此时此刻，非我莫属！</p>\r\n                            <div className=\"center-input\">\r\n                                <input className=\"input-text\" value={this.state.mytext} onChange={(e) => {\r\n                                    this.setState({\r\n                                        mytext:e.target.value\r\n                                    })\r\n                                }} type=\"text\" maxLength=\"30\" placeholder=\"请输入职位关键词\"/>\r\n                                <button>搜索</button>\r\n                            </div>\r\n                            <ul className=\"list\">\r\n                                <li>热门推荐：</li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">JAVA</NavLink>    \r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">IOS</NavLink>    \r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">数据</NavLink>    \r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">安全</NavLink>    \r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">搜索</NavLink>   \r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">算法</NavLink> \r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">运营</NavLink> \r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">视觉</NavLink> \r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">交互</NavLink> \r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">交互</NavLink> \r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/hr\">前端</NavLink> \r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"news\">\r\n                    <div className=\"news-left\">\r\n                        <div className=\"news-left-top\">\r\n                            <p>最新职位</p>\r\n                            <p>更多</p>\r\n                        </div>\r\n                        <Roll></Roll>\r\n                    </div>\r\n                    <div className=\"news-right\">\r\n                        <div className=\"news-right-one\">\r\n                            <img src=\"https://img.alicdn.com/tfs/TB1SbxarYj1gK0jSZFOXXc7GpXa-2546-848.png\" alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"news-right-two\">\r\n                            <img src=\"https://img.alicdn.com/tfs/TB18tFCCH2pK1RjSZFsXXaNlXXa-240-34.svg\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <div className=\"footer-center\">\r\n\t\t阿里巴巴集团 Copyright ©1999-2020 版权所有\r\n\t</div>\r\n            </div>\r\n            </div>  \r\n        )\r\n    }\r\n    \r\n}\r\nexport default Home","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Home from \"../views/Home\";\r\nexport default function () {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/home\" component={Home} />\r\n      <Redirect path=\"/\" to=\"/home\" exact />\r\n    </Switch>\r\n  );\r\n}","import React, { Component } from \"react\";\nimport IndexRouter from \"./router/indexRouter\";\nimport \"./App.css\";\nimport \"swiper/css/swiper.css\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <IndexRouter />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}